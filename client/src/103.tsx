/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/103.glb -t 
*/

import * as THREE from 'three'
import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF } from '@react-three/drei'
import { GLTF, SkeletonUtils } from 'three-stdlib'
import type { ComponentProps } from 'react'
type GroupProps = ComponentProps<'group'>

type GLTFAction = THREE.AnimationClip

type GLTFResult = GLTF & {
  nodes: {
    GamemodelShape: THREE.SkinnedMesh
    Trans: THREE.Bone
  }
  materials: {
    nassya: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: GroupProps) {
  const { scene } = useGLTF('/103.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone) as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0, -0.036, 0]} rotation={[Math.PI, 0, 0]} scale={0.025}>
        <primitive object={nodes.Trans} />
        <skinnedMesh geometry={nodes.GamemodelShape.geometry} material={materials.nassya} skeleton={nodes.GamemodelShape.skeleton} />
      </group>
    </group>
  )
}

useGLTF.preload('/103.glb')
